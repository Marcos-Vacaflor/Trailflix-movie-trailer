{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\marcos\\\\visual-studio\\\\react\\\\movie-app-master\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport SearchBar from \"./Components/SearchBar\";\nimport MovieTrailer from \"./Components/MovieTrailer\";\nimport MovieList from \"./Components/MovieList\";\nimport Header from \"./Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const API_KEY = \"4f5f43495afcc67e9553f6c684a82f84\";\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\"; // variables de estado\n\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\"); //const [selectedMovie, setSelectedMovie] = useState({})\n\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false); // funcion para realizar la peticion get a la api\n\n  const fetchMovies = async searchKey => {\n    const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    }); //console.log('data',results);\n    //setSelectedMovie(results[0])\n\n    setMovies(results);\n    setMovie(results[0]);\n\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  }; // funcion para la peticion de un solo objeto y mostrar en reproductor de videos\n\n\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    } //return data\n\n\n    setMovie(data);\n  };\n\n  const selectMovie = async movie => {\n    // const data = await fetchMovie(movie.id)\n    // console.log(data);\n    // setSelectedMovie(movie)\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  }; // funcion para buscar peliculas\n\n\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  function functionSetSearchBar(value) {\n    setSearchKey(value);\n    console.log(searchKey);\n  }\n\n  function functionSetPlaying(value) {\n    setPlaying(value);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      functionSetSearchBar: functionSetSearchBar,\n      searchMovies: searchMovies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieTrailer, {\n      trailer: trailer,\n      IMAGE_PATH: IMAGE_PATH,\n      movie: movie,\n      playing: playing,\n      functionSetPlaying: functionSetPlaying\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n      movies: movies,\n      IMAGE_PATH: IMAGE_PATH,\n      functionSelectMovie: selectMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kR+AH36ofZNogT3hyRns71+qivw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","axios","useState","SearchBar","MovieTrailer","MovieList","Header","App","API_URL","API_KEY","IMAGE_PATH","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","fetchMovies","type","data","results","get","params","api_key","query","length","fetchMovie","id","append_to_response","videos","find","vid","name","selectMovie","window","scrollTo","searchMovies","e","preventDefault","functionSetSearchBar","value","console","log","functionSetPlaying"],"sources":["C:/Users/USUARIO/Documents/marcos/visual-studio/react/movie-app-master/src/App.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nimport SearchBar from \"./Components/SearchBar\";\nimport MovieTrailer from \"./Components/MovieTrailer\";\nimport MovieList from \"./Components/MovieList\";\nimport Header from \"./Components/Header\";\n\nfunction App() {\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const API_KEY = \"4f5f43495afcc67e9553f6c684a82f84\";\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\n\n  // variables de estado\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  //const [selectedMovie, setSelectedMovie] = useState({})\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n  const [playing, setPlaying] = useState(false);\n\n  // funcion para realizar la peticion get a la api\n  const fetchMovies = async (searchKey) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey,\n      },\n    });\n    //console.log('data',results);\n    //setSelectedMovie(results[0])\n\n    setMovies(results);\n    setMovie(results[0]);\n\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n\n  // funcion para la peticion de un solo objeto y mostrar en reproductor de videos\n  const fetchMovie = async (id) => {\n    const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\",\n      },\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(\n        (vid) => vid.name === \"Official Trailer\"\n      );\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    //return data\n    setMovie(data);\n  };\n\n  const selectMovie = async (movie) => {\n    // const data = await fetchMovie(movie.id)\n    // console.log(data);\n    // setSelectedMovie(movie)\n    fetchMovie(movie.id);\n\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n\n  // funcion para buscar peliculas\n  const searchMovies = (e) => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  function functionSetSearchBar(value) {\n    setSearchKey(value);\n    console.log(searchKey);\n  }\n  function functionSetPlaying(value) {\n    setPlaying(value);\n  }\n\n  return (\n    <div>\n      <Header></Header>\n      <SearchBar\n        functionSetSearchBar={functionSetSearchBar}\n        searchMovies={searchMovies}\n      ></SearchBar>\n      <MovieTrailer\n        trailer={trailer}\n        IMAGE_PATH={IMAGE_PATH}\n        movie={movie}\n        playing={playing}\n        functionSetPlaying={functionSetPlaying}\n      ></MovieTrailer>\n      <MovieList\n        movies={movies}\n        IMAGE_PATH={IMAGE_PATH}\n        functionSelectMovie={selectMovie}\n      ></MovieList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}