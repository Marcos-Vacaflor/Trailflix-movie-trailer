{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USUARIO\\\\Documents\\\\marcos\\\\visual-studio\\\\react\\\\movie-app-master\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { useState } from 'react';\nimport YouTube from 'react-youtube';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const API_KEY = \"4f5f43495afcc67e9553f6c684a82f84\";\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\"; // endpoint para las imagenes\n\n  const URL_IMAGE = \"https://image.tmdb.org/t/p/original\"; // variables de estado\n\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\"); //const [selectedMovie, setSelectedMovie] = useState({})\n\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({\n    title: \"Loading Movies\"\n  });\n  const [playing, setPlaying] = useState(false); // funcion para realizar la peticion get a la api\n\n  const fetchMovies = async searchKey => {\n    const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: {\n        results\n      }\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey\n      }\n    }); //console.log('data',results);\n    //setSelectedMovie(results[0])\n\n    setMovies(results);\n    setMovie(results[0]);\n\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  }; // funcion para la peticion de un solo objeto y mostrar en reproductor de videos\n\n\n  const fetchMovie = async id => {\n    const {\n      data\n    } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\"\n      }\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\");\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    } //return data\n\n\n    setMovie(data);\n  };\n\n  const selectMovie = async movie => {\n    // const data = await fetchMovie(movie.id)\n    // console.log(data);\n    // setSelectedMovie(movie)\n    fetchMovie(movie.id);\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  }; // funcion para buscar peliculas\n\n\n  const searchMovies = e => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center mt-5 mb-5\",\n      children: \"Trailer Popular Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"container mb-4\",\n      onSubmit: searchMovies,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"search\",\n        onChange: e => setSearchKey(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        children: movie ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"viewtrailer\",\n          style: {\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`\n          },\n          children: playing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(YouTube, {\n              videoId: trailer.key,\n              className: \"reproductor container\",\n              containerClassName: \"youtube-container amru\",\n              opts: {\n                width: \"100%\",\n                height: \"100%\",\n                playerVars: {\n                  autoplay: 1,\n                  controls: 1,\n                  cc_load_policy: 0,\n                  fs: 0,\n                  iv_load_policy: 0,\n                  modestbranding: 0,\n                  rel: 0,\n                  showinfo: 0\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setPlaying(false),\n              className: \"boton\",\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: [trailer ? /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"boton\",\n                onClick: () => setPlaying(true),\n                type: \"button\",\n                children: \"Play Trailer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 23\n              }, this) : \"Sorry, no trailer available\", /*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-white\",\n                children: movie.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-white\",\n                children: movie.overview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4 mb-3\",\n          onClick: () => selectMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${URL_IMAGE + movie.poster_path}`,\n            alt: \"\",\n            height: 600,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"text-center\",\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kR+AH36ofZNogT3hyRns71+qivw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","axios","useState","YouTube","App","API_URL","API_KEY","IMAGE_PATH","URL_IMAGE","movies","setMovies","searchKey","setSearchKey","trailer","setTrailer","movie","setMovie","title","playing","setPlaying","fetchMovies","type","data","results","get","params","api_key","query","length","fetchMovie","id","append_to_response","videos","find","vid","name","selectMovie","window","scrollTo","searchMovies","e","preventDefault","target","value","backgroundImage","backdrop_path","key","width","height","playerVars","autoplay","controls","cc_load_policy","fs","iv_load_policy","modestbranding","rel","showinfo","overview","map","poster_path"],"sources":["C:/Users/USUARIO/Documents/marcos/visual-studio/react/movie-app-master/src/App.js"],"sourcesContent":["\nimport { useEffect } from 'react';\nimport axios from 'axios'\nimport './App.css';\nimport { useState } from 'react';\nimport YouTube from 'react-youtube';\n\nfunction App() {\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const API_KEY = \"4f5f43495afcc67e9553f6c684a82f84\";\n  const IMAGE_PATH = \"https://image.tmdb.org/t/p/original\";\n\n  // endpoint para las imagenes\n  const URL_IMAGE = \"https://image.tmdb.org/t/p/original\";\n\n  // variables de estado\n  const [movies, setMovies] = useState([]);\n  const [searchKey, setSearchKey] = useState(\"\");\n  //const [selectedMovie, setSelectedMovie] = useState({})\n  const [trailer, setTrailer] = useState(null);\n  const [movie, setMovie] = useState({ title: \"Loading Movies\" });\n  const [playing, setPlaying] = useState(false);\n\n  // funcion para realizar la peticion get a la api\n  const fetchMovies = async (searchKey) => {\n    const type = searchKey ? \"search\" : \"discover\";\n    const {\n      data: { results },\n    } = await axios.get(`${API_URL}/${type}/movie`, {\n      params: {\n        api_key: API_KEY,\n        query: searchKey,\n      },\n    });\n    //console.log('data',results);\n    //setSelectedMovie(results[0])\n\n    setMovies(results);\n    setMovie(results[0]);\n\n    if (results.length) {\n      await fetchMovie(results[0].id);\n    }\n  };\n\n  // funcion para la peticion de un solo objeto y mostrar en reproductor de videos\n  const fetchMovie = async (id) => {\n    const { data } = await axios.get(`${API_URL}/movie/${id}`, {\n      params: {\n        api_key: API_KEY,\n        append_to_response: \"videos\",\n      },\n    });\n\n    if (data.videos && data.videos.results) {\n      const trailer = data.videos.results.find(\n        (vid) => vid.name === \"Official Trailer\"\n      );\n      setTrailer(trailer ? trailer : data.videos.results[0]);\n    }\n    //return data\n    setMovie(data);\n  };\n\n  const selectMovie = async (movie) => {\n    // const data = await fetchMovie(movie.id)\n    // console.log(data);\n    // setSelectedMovie(movie)\n    fetchMovie(movie.id);\n\n    setMovie(movie);\n    window.scrollTo(0, 0);\n  };\n\n  // funcion para buscar peliculas\n  const searchMovies = (e) => {\n    e.preventDefault();\n    fetchMovies(searchKey);\n  };\n\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n\n  return (\n    <div>\n      <h2 className=\"text-center mt-5 mb-5\">Trailer Popular Movies</h2>\n\n      {/* el buscador */}\n      <form className=\"container mb-4\" onSubmit={searchMovies}>\n        <input\n          type=\"text\"\n          placeholder=\"search\"\n          onChange={(e) => setSearchKey(e.target.value)}\n        />\n        <button className=\"btn btn-primary\">Search</button>\n      </form>\n\n      {/* contenedor para previsualizar  */}\n      {/* <div>\n        <div\n          className=\"viewtrailer\"\n          style={{\n            backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n          }}\n        >\n          \n          \n\n          <div className=\"container\">\n\n            \n            \n            <button className=\"boton\">Play Trailer</button>\n            <h1 className=\"text-white\">{movie.title}</h1>\n            {movie.overview ? (\n              <p className=\"text-white\">{movie.overview}</p>\n            ) : null}\n          </div>\n        </div>\n      </div> */}\n\n      {/* esto es por prueba */}\n      <div>\n        <main>\n          {movie ? (\n            <div\n              className=\"viewtrailer\"\n              style={{\n                backgroundImage: `url(\"${IMAGE_PATH}${movie.backdrop_path}\")`,\n              }}\n            >\n              {playing ? (\n                <>\n                  <YouTube\n                    videoId={trailer.key}\n                    className=\"reproductor container\"\n                    containerClassName={\"youtube-container amru\"}\n                    opts={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      playerVars: {\n                        autoplay: 1,\n                        controls: 1,\n                        cc_load_policy: 0,\n                        fs: 0,\n                        iv_load_policy: 0,\n                        modestbranding: 0,\n                        rel: 0,\n                        showinfo: 0,\n                      },\n                    }}\n                  />\n                  <button onClick={() => setPlaying(false)} className=\"boton\">\n                    Close\n                  </button>\n                </>\n              ) : (\n                <div className=\"container\">\n                  <div className=\"\">\n                    {trailer ? (\n                      <button\n                        className=\"boton\"\n                        onClick={() => setPlaying(true)}\n                        type=\"button\"\n                      >\n                        Play Trailer\n                      </button>\n                    ) : (\n                      \"Sorry, no trailer available\"\n                    )}\n                    <h1 className=\"text-white\">{movie.title}</h1>\n                    <p className=\"text-white\">{movie.overview}</p>\n                  </div>\n                </div>\n              )}\n            </div>\n          ) : null}\n        </main>\n      </div>\n\n      {/* contenedor para mostrar los posters y las peliculas en la peticion a la api */}\n      <div className=\"container mt-3\">\n        <div className=\"row\">\n          {movies.map((movie) => (\n            <div\n              key={movie.id}\n              className=\"col-md-4 mb-3\"\n              onClick={() => selectMovie(movie)}\n            >\n              <img\n                src={`${URL_IMAGE + movie.poster_path}`}\n                alt=\"\"\n                height={600}\n                width=\"100%\"\n              />\n              <h4 className=\"text-center\">{movie.title}</h4>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}